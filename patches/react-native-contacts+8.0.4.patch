diff --git a/node_modules/react-native-contacts/ios/RCTContacts/RCTContacts.mm b/node_modules/react-native-contacts/ios/RCTContacts/RCTContacts.mm
index feaf0da..0a5a528 100644
--- a/node_modules/react-native-contacts/ios/RCTContacts/RCTContacts.mm
+++ b/node_modules/react-native-contacts/ios/RCTContacts/RCTContacts.mm
@@ -66,7 +66,7 @@ RCT_EXPORT_METHOD(checkPermission:(RCTPromiseResolveBlock) resolve
     } else if (authStatus == CNAuthorizationStatusAuthorized){
         resolve(@"authorized");
     } else if(@available(iOS 18, *)) {
-        if (authStatus == CNAuthorizationStatusLimited) {
+        if (authStatus == PHAuthorizationStatusLimited) {
             resolve(@"limited");
         }
     } else {
@@ -577,7 +577,7 @@ RCT_EXPORT_METHOD(getPhotoForId:(nonnull NSString *)recordID resolver:(RCTPromis
     }
     else if(@available(iOS 18, *))
     {
-        if([CNContactStore authorizationStatusForEntityType:entityType] == CNAuthorizationStatusLimited)
+        if([CNContactStore authorizationStatusForEntityType:entityType] == PHAuthorizationStatusLimited)
         {
             resolve([self getFilePathForThumbnailImage:recordID addressBook:contactStore]);
         }
@@ -622,7 +622,7 @@ RCT_EXPORT_METHOD(getContactById:(nonnull NSString *)recordID resolver:(RCTPromi
     }
     else if(@available(iOS 18, *))
     {
-        if([CNContactStore authorizationStatusForEntityType:entityType] == CNAuthorizationStatusLimited)
+        if([CNContactStore authorizationStatusForEntityType:entityType] == PHAuthorizationStatusLimited)
         {
             resolve([self getContact:recordID addressBook:contactStore withThumbnails:false]);
         }
@@ -1306,7 +1306,7 @@ RCT_EXPORT_METHOD(writePhotoToPath:(nonnull NSString *)path resolver:(RCTPromise
      } else if (authStatus == CNAuthorizationStatusAuthorized){
          resolve(@"authorized");
      } else if(@available(iOS 18, *)) {
-         if (authStatus == CNAuthorizationStatusLimited) {
+         if (authStatus == PHAuthorizationStatusLimited) {
              resolve(@"limited");
          }
      } else {
@@ -1465,7 +1465,7 @@ RCT_EXPORT_METHOD(writePhotoToPath:(nonnull NSString *)path resolver:(RCTPromise
      }
      else if(@available(iOS 18, *))
      {
-        if([CNContactStore authorizationStatusForEntityType:entityType] == CNAuthorizationStatusLimited)
+         if([CNContactStore authorizationStatusForEntityType:entityType] == PHAuthorizationStatusLimited)
         {
             resolve([self getContact:recordID addressBook:contactStore withThumbnails:false]);
         }
@@ -1522,7 +1522,7 @@ RCT_EXPORT_METHOD(writePhotoToPath:(nonnull NSString *)path resolver:(RCTPromise
         }
         else if(@available(iOS 18, *))
         {
-            if([CNContactStore authorizationStatusForEntityType:entityType] == CNAuthorizationStatusLimited)
+            if([CNContactStore authorizationStatusForEntityType:entityType] == PHAuthorizationStatusLimited)
             {
                 resolve([self getFilePathForThumbnailImage:recordID addressBook:contactStore]);
             }
